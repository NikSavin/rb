n = 'Тест'

puts case n
  when String
  	'это строка'
  when Integer
    'это число'
  else
  	'всё остальное'
  end


__END__
#Оператор ветвления case 
#Оператор case для сравнения использует оператор === который при сравнении диапазона с числом возвращает trye если число входит в диапазон.
#Оператор не является симметричным, в обратную сторону он не действует(10 === (2...50)) связанно это с тем что все операторы в языке руби являются методами и метод оператора === преопределен для диапазона и не определен для целого числа.

puts 'Введите число'
n = gets.to_i

if n == 0
	puts 'Число 0'
elsif n == 1
	puts 'Число 1'
elsif (2...50) === n
	puts 'Число в диапазоне от 2 до 50'
else
	puts 'Все остальные числа'
end


puts 'Введите число'
n = gets.to_i

case n
when 0
	puts 'Число 0'
when 1
	puts 'Число 1'
when 2...50
	puts 'Число в диапазоне от 2 до 50'
else
	puts 'Все остальные числа'
end

#Тернарный оператор

puts 'Введите число'
n = gets.to_i

result = n > 0 ? 'положительное' : 'отрицательное или равно 0'
puts "Ваше число #{result} "


puts 'Введите число'
n = gets.to_i

puts "Ваше число #{ n > 0 ? 'положительное' : 'отрицательное или равно 0' }"


puts 'Введите число'
n = gets.to_i
puts n > 0 ? 'число больше 0' : 'Число меньше или равно 0' 


if n > 0
	puts 'Число больше 0'
elsif n <= 0
	puts 'Число меньше или равно 0'
end


#Операторы отрицания ( unless,not,!=,!() )

if RUBY_VERSION != '2.4.1' #Версия 2.4.2
  puts 'Версия не равна 2.4.1'
end

if not RUBY_VERSION == '2.4.1' #Версия 2.4.2
  puts 'Версия не равна 2.4.1'
end

if !(RUBY_VERSION == '2.4.1') #Обязательно заключить всё выражение в скобки после оператора ! иначе оператор будет принимать только правое выражение !(RUBY_VERSION)
  puts 'Версия не равна 2.4.1'
end

unless RUBY_VERSION == '2.4.1' #Чаще всего используют именно этот метод неравенства.
  puts 'Версия не равна 2.4.1'
end

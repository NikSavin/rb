#Константам в руби можно изменять значения.
#По соглашениям константы для простых объектов таких как числа и строки должны состоять полностью из заглавных букв.Отдельные слова в них разделяются с помощью символа подчеркивания _ .
#Константы в кэмел кейс режимах допустимы, но они зарезервированны за классами и модулями, если свои константы называть в таком режиме их легко можно перепутать с какими нибудь классами или модулями.
# Константы в руби играют роль импорта.Их задача импортировать из одного места программы в другое. 

require_relative 'RequireRelativeTest/hello_world'

hello = RequireRelativeTest::HelloWorld.new
#Пространство имен(::) позволяет не просто быстро находить наши классы в сложной файловой структуре, но и позволяет обезопасить наше приложение от конфликтов с другими библиотеками.
#Например если класс HelloWorld определен в каком либо геме или библиотеки это может привести к тому что могут быть перезаписаны какие то методы нашего класса или мы перезапишем некоторые методы в классе бибилиотеки или гема.
#Если мы добавляем пространственное название имен это позволяет избежать таких конфликтов.
#
puts hello.say
#Константы имеют гораздо больше прав чем все остальные переменные.Мы можем обращаться непосредственно к константе в классе HelloWorld.
puts RequireRelativeTest::HelloWorld::MESSAGE
#У нас выводится две фразы hi,world одна выводится методом say(puts hello.say) другая выводится константой MESSAGE.
#Иногда в программе создается отдельный модуль чтобы собрать все константы в одно место.Это вполне корректная практика которая часто используется.

__END__
#require './lesson3.3.hello'# Чтобы подключить класс из файла lesson3.3.hello используем конструкцию require. С помощью конструкции require мы можем извлекать только константы.
#У конструкции require есть ряд особенностей.Она загружает файл ровно один раз.
#Путь файла указан относительный.Относительно той папки которая обзначается точкой (.) , это связанно с тем что текущая папка не является путем поиска по умолчанию.Ситуацию можно исправить если добавить этот путь в глобальную предопределенную переменную LOAD_PATH.
#$LOAD_PATH << '.' #Корректирование LOAD_PATH не очень элегантный путь.Вместо этого мы можем использовать альтернативный метод require_relative.
#require 'lesson3.3.hello'
require_relative 'lesson3.3.hello' #В этом случае файл будет искаться относительно текущей дерриктории.

hello = HelloWorld.new
puts hello.say
puts CONST
# puts hello_world #Вывод этой переменной преведет к ошибке т.к. она является ЛОКАЛЬНОЙ ПЕРЕМЕННОЙ.Таким образом с помощью конструкции require мы можем извлекать только КОНСТАНТЫЮ 
# Именно поэтому в руби классы и модули начинаются с заглавной буквы, а локальные переменные со строчной. 
#
#
#
#Синглитон метод- это метод который определен.Метод который определяется только на объекте, мы не можем вызывать его без объекта на котором он определён. 
#Мы создаем объект ticket
ticket = Object.new
#Для объекта ticket мы создаем сингилитон метод price которая возвращает цену билета. 
def ticket.price
  5.5
end

puts ticket.price

#Для того чтобы вызвать синглитон метод(ticket.price) нам пришлось явно указывать объект(ticket),точку(.) и после этого указать имя метода(price).Если мы посмотрим на создание объекта(Object.new) при помощи метода new то увидим ту же самую картину.
#Object - константа ссылающаяся на класс, точка и вызов метода new.Т.е. классы сами по себе тоже являются объектами и у них тоже есть методы.Но если метод new является встроенным на уровне интерпритатора.Можно ли нам создать свои собственные методы на уровне классов?Да!Это возможно!
#Создадим класс HelloWorld и создадим для него метод на уровня класса.
class HelloWorld#Создаем самый простой класс
end

def HelloWorld.say #Создаем метод say на уровне класса
	'Hello'
end

puts HelloWorld.say #Мы создали классовый метод и можем им воспользоваться не создавая объетка этого класса
#Однако это не все на что способны классовые методы.
#Давайте поместим определение метода say1 внутрь класса HelloWorld1.
#Мы можем размещать любой руби код между ключевым словом class и end.Разместим там синглитон метод say1

class HelloWorld1
	def self.say1 #Имя класса в теле класса мы можем заменять ссылкой на текущий объект.self он будет указывать на текущий класс.Именно в такой форме мы чаще всего и будем видет определение методов класса.
		#Если в начале названия метода стоит self. это означает что это метод данного класса.
	#def HelloWorld1.say1 #Можно вызвать без создания объекта
	  'Hello 1'
	end
#Таким образом на уровне класса мы можем создавать 2-ва типа методов.Один это сингитон методы(HelloWorld1.say) второй это инстанс методы(instans_say)- методы которые будут вызываться только в отношении объетка.
	def instans_say #Вызовется только при создании объекта
		'Hello instans'
	end
end	

puts HelloWorld1.say1# У нас есть синглитон метод say1 который вызывается на уровне класса.
hello = HelloWorld1.new

puts hello.instans_say# Есть инстанс метод instant_say который можно вызвать при создании объетка.

#Сингитон методы можно создать при помощи специальной конструкции.

class HelloWorld3

class << self
  def some
  	'Конструкция создания синглитон методов внутри класса HelloWorld3'
  end
end

end

class << HelloWorld3
#Всё что здесь будет написано будет реализованно на уровне класса.
#Фактически здесь мы можем определить синглитон методы.
  def say2
  	'Синглитон метод класса Hello World 3.'
  end
end

puts HelloWorld3.say2
puts HelloWorld3.some








